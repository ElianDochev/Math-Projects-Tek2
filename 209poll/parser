#!/usr/bin/env python3

import sys

class parser:
    def __init__(this, parce:bool = False):
        this.numeric_args = []
        this.float_arg:float = 0.0
        if (parce):
            this.parse()

    def __print_help(this) -> None:
        print("USAGE")
        print("\t/209dowels pSize sSize p\n")
        print("DESCRIPTION")
        print("\tpSize\tsize of the population")
        print("\tsSize\tsize of the sample (supposed to be representative)")
        print("\tp\tpercentage of voting intentions for a specific candidate")

    def parse(this) -> None:
        if (len(sys.argv) == 4):
            if (sys.argv[1] == "-h"):
                this.__print_help()
                exit(0)
            else:
                this.numeric_args.append(int(sys.argv[1]))
                this.numeric_args.append(int(sys.argv[2]))
                this.float_arg = float(sys.argv[3])
                if (this.numeric_args[0] <= 0 or this.numeric_args[1] <= 0):
                    raise Exception("Negative arguments")
                if (this.numeric_args[1] > this.numeric_args[0]):
                    raise Exception("sample size can't be superior to max size and must be strictly positive")
                if (this.float_arg < 0 or this.float_arg > 100):
                    raise Exception("p must be between 0% and 100%")
        else:
            this.__print_help()
            raise Exception("Invalid number of arguments")

    def get_parced_data(this) -> list:
        return [this.numeric_args, this.float_arg]

