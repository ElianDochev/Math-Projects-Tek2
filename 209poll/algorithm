#!/usr/bin/env python3

from imp import load_source

parser = load_source('parser', './parser').parser
utils = load_source('utils', './utils').utils

class algorithm:
    def __init__(this):
        parser_obj = parser(True)
        args:list = parser_obj.get_parced_data()
        this.population_size:int = args[0][0]
        this.sample_size:int = args[0][1]
        this.p:float = args[1] / 100
        this.variance:float = utils.get_variance(this.population_size, this.sample_size, this.p)

    def __str__(this) -> str:
        print("Population size: ", this.population_size, sep="")
        print("Sample size: ", this.sample_size, sep="")
        print("Voting intentions: %.2f%%" % (this.p * 100), sep="")
        print("Variance: %.6f" % this.variance, sep="")
        ci95:list = utils.get_CI95(this.p, this.variance)
        ci99:list = utils.get_CI99(this.p, this.variance)
        print("95%% confidence interval: [%.2f%%" % ci95[0], "; %.2f%%]" %ci95[1], sep="")
        print("99%% confidence interval: [%.2f%%" % ci99[0], "; %.2f%%]" %ci99[1], sep="")
        return ""
